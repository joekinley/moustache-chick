package
{
	/**
   * ...
   * @author Rafael Wenzel
   */
  public class Levels
  {

    public static function level1( ):Array {
      return new Array(
        22,22,22,22,22,23,22,22,22,22,22,22,22,22,22,22,22,22,22,22,
        22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22, 0, 0, 0,21,21,21, 0, 0, 0, 0, 0, 0, 0, 0,21,21, 0,11,22,
        22, 0, 0, 0, 0, 0, 0, 0, 0,21,21, 0, 0, 0, 0, 0, 0, 0,21,22,
        22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,21,21, 0, 0, 0, 0, 0, 0,22,
        22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,21,21, 0, 0, 0,22,
        22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,21,21, 0, 0, 0, 0, 0, 0,22,
        22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22, 0, 0, 0, 0, 0, 0, 0,21,21, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22, 0, 0, 0, 0,21,21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22
      );
    }

    public static function level2( ):Array {
      return new Array(
        22,22,23,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,
        22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22,21,21,21,21,21,21,21,21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22,21,21,21,21,21,21,21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22,21,21,21,21,21,21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22, 0, 0, 0, 0, 0,21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22, 0, 0, 0, 0, 0,21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22, 0, 0, 0, 0, 0,21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22, 0, 0, 0, 0, 0,21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22, 0, 0, 0, 0, 0,21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22,21,21,21,21,21,21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22,21,21,21,21,21,21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22,21,21,21,21,21,21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22,21,21,21,21,21,21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22,21,21,21,21,21,21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,
        22,21,21,21,21,21,21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,11,22,
        22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22
      );
    }

    // debug level 0
    public static function level0( ):Array {
      return new Array(
      22,22,22,23,22,22,22,23,22,22,
      22, 0, 0, 0, 0, 0, 0, 0, 0,22,
      22, 0,21,21,21, 0, 0, 0, 0,22,
      22, 0, 0, 0,21, 0,21, 0, 0,22,
      22, 0, 0, 0,21,21,21, 0, 0,22,
      22, 0, 0, 0, 0, 0, 0, 0, 0,22,
      22, 0, 2, 0, 0, 0, 0,21,21,22,
      22, 0, 0, 0, 0, 0, 0, 0, 0,22,
      22, 0, 0, 0, 0,21,21, 0, 0,22,
      22, 0, 0, 0, 0, 0, 0, 0, 0,22,
      22, 0, 0,21,21, 0, 0,21,21,22,
      22, 0, 0, 0, 0, 0, 0, 0, 0,22,
      22,21,21, 0, 0,21,21, 0, 0,22,
      22, 0, 0, 0, 0, 0, 0, 0, 0,22,
      22, 0, 0,21,21, 0, 0,21,21,22,
      22, 0, 0, 0, 0, 0, 0, 0, 0,22,
      22,21,21, 0, 0,21,21, 0, 0,22,
      22, 0, 0, 0, 0, 0, 0, 0, 0,22,
      22, 0, 0,21,21, 0, 0,21,21,22,
      22, 0, 0, 0, 0, 0, 0, 0, 0,22,
      22,21,21, 0, 0,21,21, 0, 0,22,
      22, 0, 0, 0, 0, 0, 0, 0, 0,22,
      22, 0, 0,21,21, 0, 0,21,21,22,
      22, 0, 0, 0, 0, 0, 0, 0, 0,22,
      22,21,21, 0, 0,21,21, 0, 0,22,
      22, 0, 0, 0, 0, 0, 0, 0, 0,22,
      22, 0, 0, 0, 0, 0, 0,21,21,22,
      22, 0, 0, 0, 0, 0, 0, 0, 0,22,
      22,22,22,22,22,22,22,22,22,22
      );
    }

    // level generator
    public static function generateLevel( width:int, height:int ):Array {

      var i:int = 0, j:int = 0, myRand:int = 0;

      // initialize empty level
      var level:Array = new Array( width * height );
      for ( i = 0; i < width * height; i++ ) level[ i ] = 0;

      // make borders
      for ( i = 0; i < width * height; i++ ) {
        // basic level borders
        if ( i < width ) level[ i ] = Globals.TILES_WALL; // top border
        if ( i % width == 0 ) level[ i ] = Globals.TILES_WALL; // left border
        if ( (i+1) % width == 0 ) level[ i ] = Globals.TILES_WALL; // right border
        if ( i > width * height - width ) level[ i ] = Globals.TILES_WALL; // bottom border
      }

      // add platforms to jump on
      for ( i = 0; i < width * height; i++ ) {

        if ( level[ i ] == 0 && Math.random( ) * 100 < Globals.WORLDGEN_FLOOR_RANDOM ) {
          level[ i ] = 21;
        }
      }

      // grow platforms
      for ( j = 0; j < Globals.WORLDGEN_EVOLUTION_RUNS; j++ ) {
        for ( i = 0; i < width * height; i++ ) {
          if ( level[ i ] == 21 ) {
            myRand = Math.random( ) * 100;

            if ( myRand < Globals.WORLDGEN_GROW_RANDOM ) {
              if ( myRand % 2 == 0 ) {
                level[ i - 1 ] = 21;
              } else {
                level[ i + 1] = 21;
              }
            }
          }
        }
      }

      // set player position at leftmost and bottommost 0 tile
      var playerSet:Boolean = false;
      do {
        for ( j = height; j > 0; j-- ) {
          for ( i = 0; i < width; i++ ) {
            if ( !playerSet && level[ width * j - width + i ] == 0 ) {
              level[ width * j - width + i ] = Globals.TILES_PLAYER_START;
              playerSet = true;
            }
          }
        }
      } while ( !playerSet );

      // set lava sources
      for ( i = 0; i < width; i++ ) {
        if ( Math.random( ) * 100 < Globals.WORLDGEN_LAVASOURCE_RANDOM && level[ i + width ] == 0 ) level[ i ] = Globals.TILES_LAVA_SOURCE;
      }

      // return generated level
      return level;
    }

  }

}